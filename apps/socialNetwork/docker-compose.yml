version: "3"
#networks:
#  mynetwork:
#    driver: bridge
#    ipam:
#      driver: default
#      config:
#        - subnet: 172.24.0.0/16

services:
  social-graph-service:
    image: local/social:v1
    hostname: social-graph-service
    container_name: social-graph-service
    logging:
      driver: none
    #    ports:
    #      - 10000:9090
    depends_on:
     - social-graph-mongodb
      #jaeger-agent:
      #  condition: service_started
      #social-graph-mongodb:
      #  condition: service_started
    restart: always
    deploy:
     replicas: 1
     placement:
      constraints: 
        - node.labels.type == work
    entrypoint: SocialGraphService
    #networks:
    #  - mynetwork
    volumes:
      - ./config:/social-network-microservices/config
      - /home/cc/paper_setup/shared:/social-network-microservices/shared

  social-graph-mongodb:
    image: mongo:4.4.6
    hostname: social-graph-mongodb
    container_name: social-graph-mongodb
    deploy:
     replicas: 1
     placement:
      constraints: 
       - node.labels.type == work
    logging:
      driver: none
    # ports:
    #   - 27018:27017
    restart: always
    #networks:
    #  - mynetwork

  social-graph-redis:
    image: redis
    hostname: social-graph-redis
    container_name: social-graph-redis
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    logging:
      driver: none
    # ports:
    #   - 6380:6379
    restart: always
    #networks:
    #  - mynetwork

  home-timeline-redis:
    image: redis
    hostname: home-timeline-redis
    container_name: home-timeline-redis
    deploy:
     replicas: 1
     placement:
      constraints: 
       - node.labels.type == work
    logging:
      driver: none
    # ports:
    #   - 6381:6379
    restart: always
    #networks:
    #  - mynetwork

  compose-post-service:
    image: local/social:v1
    hostname: compose-post-service
    container_name: compose-post-service
    deploy:
     replicas: 1
     placement:
      constraints: 
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 10001:9090
    restart: always
    #depends_on:
    #  jaeger-agent:
    #    condition: service_started
    entrypoint: ComposePostService
    #networks:
    #  - mynetwork
    volumes:
      - ./config:/social-network-microservices/config
      - /home/cc/paper_setup/shared:/social-network-microservices/shared

  post-storage-service:
    image: local/social:v1
    hostname: post-storage-service
    container_name: post-storage-service
    #logging:
    #  driver: none
    ports:
      - 10002:9090
    restart: always
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    #networks:
    #  - mynetwork
    depends_on:
     - post-storage-mongodb
     # jaeger-agent:
     #   condition: service_started
     # post-storage-mongodb:
     #   condition: service_started
    entrypoint: PostStorageService
    volumes:
      - ./config:/social-network-microservices/config
      - /home/cc/paper_setup/shared:/social-network-microservices/shared

  post-storage-memcached:
    image: memcached
    hostname: post-storage-memcached
    container_name: post-storage-memcached
    deploy:
     replicas: 1
     placement:
      constraints: 
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 11212:11211
    restart: always
    #networks:
    #  - mynetwork

  post-storage-mongodb:
    image: mongo:4.4.6
    hostname: post-storage-mongodb
    container_name: post-storage-mongodb
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 27019:27017
    restart: always
    #networks:
    #  - mynetwork

  user-timeline-service:
    image: local/social:v1
    hostname: user-timeline-service
    container_name: user-timeline-service
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    #logging:
    #  driver: none
    #    ports:
    #      - 10003:9090
    restart: always
    #networks:
    #  - mynetwork
    depends_on:
      - user-timeline-mongodb
      #jaeger-agent:
      #  condition: service_started
      #user-timeline-mongodb:
      #  condition: service_started
    entrypoint: UserTimelineService
    volumes:
      - ./config:/social-network-microservices/config
      - /home/cc/paper_setup/shared:/social-network-microservices/shared

  user-timeline-redis:
    image: redis
    hostname: user-timeline-redis
    container_name: user-timeline-redis
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 6383:6379
    restart: always
    #networks:
    #  - mynetwork

  user-timeline-mongodb:
    image: mongo:4.4.6
    hostname: user-timeline-mongodb
    container_name: user-timeline-mongodb
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 27020:27017
    restart: always
    #networks:
    #  - mynetwork

  url-shorten-service:
    image: local/social:v1
    hostname: url-shorten-service
    container_name: url-shorten-service
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 10004:9090
    restart: always
    #networks:
    #  - mynetwork
    entrypoint: UrlShortenService
    depends_on:
      #jaeger-agent:
      #  condition: service_started
      - url-shorten-mongodb
      #url-shorten-mongodb:
      #  condition: service_started
    volumes:
      - ./config:/social-network-microservices/config
      - /home/cc/paper_setup/shared:/social-network-microservices/shared

  url-shorten-memcached:
    image: memcached
    hostname: url-shorten-memcached
    container_name: url-shorten-memcached
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 11213:11211
    restart: always
    #networks:
    #  - mynetwork

  url-shorten-mongodb:
    image: mongo:4.4.6
    hostname: url-shorten-mongodb
    container_name: url-shorten-mongodb
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 27021:27017
    restart: always
    #networks:
    #  - mynetwork

  user-service:
    image: local/social:v1
    hostname: user-service
    container_name: user-service
    deploy:
     replicas: 1
     placement:
      constraints: 
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 10005:9090
    restart: always
    #networks:
    #  - mynetwork
    depends_on:
     - user-mongodb
      #jaeger-agent:
      #  condition: service_started
      #user-mongodb:
      #  condition: service_started
    entrypoint: UserService
    volumes:
      - ./config:/social-network-microservices/config
      - /home/cc/paper_setup/shared:/social-network-microservices/shared

  user-memcached:
    image: memcached
    hostname: user-memcached
    container_name: user-memcached
    deploy:
     replicas: 1
     placement:
      constraints: 
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 11214:11211
    restart: always
    #networks:
    #  - mynetwork

  user-mongodb:
    image: mongo:4.4.6
    hostname: user-mongodb
    container_name: user-mongodb
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    logging:
      driver: none
    # ports:
    #   - 27023:27017
    restart: always
    #networks:
    #  - mynetwork

  media-service:
    image: local/social:v1
    hostname: media-service
    container_name: media-service
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 10006:9090
    depends_on:
     - media-mongodb
      #jaeger-agent:
      #  condition: service_started
      #media-mongodb:
      #  condition: service_started
    restart: always
    #networks:
    #  - mynetwork
    entrypoint: MediaService
    volumes:
      - ./config:/social-network-microservices/config
      - /home/cc/paper_setup/shared:/social-network-microservices/shared

  media-memcached:
    image: memcached
    hostname: media-memcached
    container_name: media-memcached
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 11215:11211
    restart: always
    #networks:
    #  - mynetwork

  media-mongodb:
    image: mongo:4.4.6
    hostname: media-mongodb
    container_name: media-mongodb
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 27024:27017
    restart: always
    #networks:
    #  - mynetwork

  text-service:
    image: local/social:v1
    hostname: text-service
    container_name: text-service
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 10007:9090
    restart: always
    #networks:
    #  - mynetwork
    #depends_on:
    #  jaeger-agent:
    #    condition: service_started
    entrypoint: TextService
    volumes:
      - ./config:/social-network-microservices/config
      - /home/cc/paper_setup/shared:/social-network-microservices/shared

  unique-id-service:
    image: local/social:v1
    hostname: unique-id-service
    container_name: unique-id-service
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 10008:9090
    restart: always
    #networks:
    #  - mynetwork
    #depends_on:
    #  jaeger-agent:
    #    condition: service_started
    entrypoint: UniqueIdService
    volumes:
      - ./config:/social-network-microservices/config
      - /home/cc/paper_setup/shared:/social-network-microservices/shared

  user-mention-service:
    image: local/social:v1
    hostname: user-mention-service
    container_name: user-mention-service
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    #networks:
    #  - mynetwork
    logging:
      driver: none
    #    ports:
    #      - 10009:9090
    #depends_on:
    #  jaeger-agent:
    #    condition: service_started
    restart: always
    entrypoint: UserMentionService
    volumes:
      - ./config:/social-network-microservices/config
      - /home/cc/paper_setup/shared:/social-network-microservices/shared

  home-timeline-service:
    image: local/social:v1
    hostname: home-timeline-service
    container_name: home-timeline-service
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type == work
    logging:
      driver: none
    #    ports:
    #      - 10010:9090
    #depends_on:
    #  jaeger-agent:
    #    condition: service_started
    restart: always
    #networks:
    #  - mynetwork
    entrypoint: HomeTimelineService
    volumes:
      - ./config:/social-network-microservices/config
      - /home/cc/paper_setup/shared:/social-network-microservices/shared

  nginx-thrift:
    image: local/openresty:v1
    hostname: nginx-thrift
    container_name: nginx-thrift
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type != work
    ports:
      - "8080:8080"
    #logging:
    #  driver: none
    #depends_on:
    #  jaeger-agent:
    #    condition: service_started
    restart: always
    #networks:
    #  - mynetwork
    volumes:
      - ./nginx-web-server/lua-scripts:/usr/local/openresty/nginx/lua-scripts
      - ./nginx-web-server/pages:/usr/local/openresty/nginx/pages
      - ./nginx-web-server/conf/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
      - ./nginx-web-server/jaeger-config.json:/usr/local/openresty/nginx/jaeger-config.json
      - ./gen-lua:/gen-lua
      - ./docker/openresty-thrift/lua-thrift:/usr/local/openresty/lualib/thrift

  media-frontend:
    image: yg397/media-frontend:xenial
    hostname: media-frontend
    container_name: media-frontend
    deploy:
     replicas: 1
     placement:
      constraints:
       - node.labels.type != work
    #logging:
    #  driver: none
    ports:
      - 8081:8080
    restart: always
    #networks:
    #  - mynetwork
    #depends_on:
    #  jaeger-agent:
    #    condition: service_started
    volumes:
      - ./media-frontend/lua-scripts:/usr/local/openresty/nginx/lua-scripts
      - ./media-frontend/conf/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf

  #jaeger-agent:
  #  image: jaegertracing/all-in-one:latest
  #  ports:
  #    #      - 5775:5775/udp
  #    #      - 6831:6831/udp
  #    #      - 6832:6832/udp
  #    #      - 5778:5778
  #    - 16686:16686
  #    #      - 14268:14268
  #    #      - 9411:9411
  #  restart: always
  #  environment:
  #    - COLLECTOR_ZIPKIN_HTTP_PORT=9411
